on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tag name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/craftdock:latest
            ${{ secrets.DOCKER_USERNAME }}/craftdock:${{ env.TAG_NAME }}

      - name: Verify Docker image existence
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/craftdock:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/craftdock:${{ env.TAG_NAME }}

      - name: Save Docker image
        run: |
          docker save ${{ secrets.DOCKER_USERNAME }}/craftdock:latest -o craftdock-latest.tar
          docker save ${{ secrets.DOCKER_USERNAME }}/craftdock:${{ env.TAG_NAME }} -o craftdock-${{ env.TAG_NAME }}.tar
      
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      - name: Upload latest image asset to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./craftdock-latest.tar
          asset_name: craftdock-latest.tar
          asset_content_type: application/x-tar

      - name: Upload versioned image asset to Github
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./craftdock-${{ env.TAG_NAME }}.tar
          asset_name: craftdock-${{ env.TAG_NAME }}.tar
          asset_content_type: application/x-tar